model_index.json: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 180/180 [00:00<00:00, 15.5kB/s]
scheduler_config.json: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 256/256 [00:00<00:00, 14.2kB/s]
config.json: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 699/699 [00:00<00:00, 97.7kB/s]
Fetching 4 files:  25%|█████████████████████████████████████████████████▊                                                                                                                                                     | 1/4 [00:00<00:01,  1.88it/s]






Fetching 4 files: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:25<00:00,  6.27s/it]
Loading pipeline components...: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:00<00:00, 33.46it/s]
Traceback (most recent call last):
  File "/home/sehwan/MIIL/diffusion-distillation/memo.py", line 390, in <module>
    app.run(main)
  File "/home/sehwan/anaconda3/envs/SLD/lib/python3.9/site-packages/absl/app.py", line 308, in run
    _run_main(main, args)
  File "/home/sehwan/anaconda3/envs/SLD/lib/python3.9/site-packages/absl/app.py", line 254, in _run_main
    sys.exit(main(argv))
  File "/home/sehwan/MIIL/diffusion-distillation/memo.py", line 386, in main
    distill_caching_random2()
  File "/home/sehwan/MIIL/diffusion-distillation/memo.py", line 340, in distill_caching_random2
    teacher_model.load_state_dict(pretrained_unet.state_dict())  # 가중치 로드
  File "/home/sehwan/anaconda3/envs/SLD/lib/python3.9/site-packages/torch/nn/modules/module.py", line 2041, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for UNetDiffusers:
	Missing key(s) in state_dict: "down_blocks.2.attentions.0.group_norm.weight", "down_blocks.2.attentions.0.group_norm.bias", "down_blocks.2.attentions.0.to_q.weight", "down_blocks.2.attentions.0.to_q.bias", "down_blocks.2.attentions.0.to_k.weight", "down_blocks.2.attentions.0.to_k.bias", "down_blocks.2.attentions.0.to_v.weight", "down_blocks.2.attentions.0.to_v.bias", "down_blocks.2.attentions.0.to_out.0.weight", "down_blocks.2.attentions.0.to_out.0.bias", "down_blocks.2.attentions.1.group_norm.weight", "down_blocks.2.attentions.1.group_norm.bias", "down_blocks.2.attentions.1.to_q.weight", "down_blocks.2.attentions.1.to_q.bias", "down_blocks.2.attentions.1.to_k.weight", "down_blocks.2.attentions.1.to_k.bias", "down_blocks.2.attentions.1.to_v.weight", "down_blocks.2.attentions.1.to_v.bias", "down_blocks.2.attentions.1.to_out.0.weight", "down_blocks.2.attentions.1.to_out.0.bias", "down_blocks.2.resnets.0.conv_shortcut.weight", "down_blocks.2.resnets.0.conv_shortcut.bias", "down_blocks.3.attentions.0.group_norm.weight", "down_blocks.3.attentions.0.group_norm.bias", "down_blocks.3.attentions.0.to_q.weight", "down_blocks.3.attentions.0.to_q.bias", "down_blocks.3.attentions.0.to_k.weight", "down_blocks.3.attentions.0.to_k.bias", "down_blocks.3.attentions.0.to_v.weight", "down_blocks.3.attentions.0.to_v.bias", "down_blocks.3.attentions.0.to_out.0.weight", "down_blocks.3.attentions.0.to_out.0.bias", "down_blocks.3.attentions.1.group_norm.weight", "down_blocks.3.attentions.1.group_norm.bias", "down_blocks.3.attentions.1.to_q.weight", "down_blocks.3.attentions.1.to_q.bias", "down_blocks.3.attentions.1.to_k.weight", "down_blocks.3.attentions.1.to_k.bias", "down_blocks.3.attentions.1.to_v.weight", "down_blocks.3.attentions.1.to_v.bias", "down_blocks.3.attentions.1.to_out.0.weight", "down_blocks.3.attentions.1.to_out.0.bias", "down_blocks.3.resnets.0.conv_shortcut.weight", "down_blocks.3.resnets.0.conv_shortcut.bias", "up_blocks.0.attentions.0.group_norm.weight", "up_blocks.0.attentions.0.group_norm.bias", "up_blocks.0.attentions.0.to_q.weight", "up_blocks.0.attentions.0.to_q.bias", "up_blocks.0.attentions.0.to_k.weight", "up_blocks.0.attentions.0.to_k.bias", "up_blocks.0.attentions.0.to_v.weight", "up_blocks.0.attentions.0.to_v.bias", "up_blocks.0.attentions.0.to_out.0.weight", "up_blocks.0.attentions.0.to_out.0.bias", "up_blocks.0.attentions.1.group_norm.weight", "up_blocks.0.attentions.1.group_norm.bias", "up_blocks.0.attentions.1.to_q.weight", "up_blocks.0.attentions.1.to_q.bias", "up_blocks.0.attentions.1.to_k.weight", "up_blocks.0.attentions.1.to_k.bias", "up_blocks.0.attentions.1.to_v.weight", "up_blocks.0.attentions.1.to_v.bias", "up_blocks.0.attentions.1.to_out.0.weight", "up_blocks.0.attentions.1.to_out.0.bias", "up_blocks.0.attentions.2.group_norm.weight", "up_blocks.0.attentions.2.group_norm.bias", "up_blocks.0.attentions.2.to_q.weight", "up_blocks.0.attentions.2.to_q.bias", "up_blocks.0.attentions.2.to_k.weight", "up_blocks.0.attentions.2.to_k.bias", "up_blocks.0.attentions.2.to_v.weight", "up_blocks.0.attentions.2.to_v.bias", "up_blocks.0.attentions.2.to_out.0.weight", "up_blocks.0.attentions.2.to_out.0.bias", "up_blocks.1.attentions.0.group_norm.weight", "up_blocks.1.attentions.0.group_norm.bias", "up_blocks.1.attentions.0.to_q.weight", "up_blocks.1.attentions.0.to_q.bias", "up_blocks.1.attentions.0.to_k.weight", "up_blocks.1.attentions.0.to_k.bias", "up_blocks.1.attentions.0.to_v.weight", "up_blocks.1.attentions.0.to_v.bias", "up_blocks.1.attentions.0.to_out.0.weight", "up_blocks.1.attentions.0.to_out.0.bias", "up_blocks.1.attentions.1.group_norm.weight", "up_blocks.1.attentions.1.group_norm.bias", "up_blocks.1.attentions.1.to_q.weight", "up_blocks.1.attentions.1.to_q.bias", "up_blocks.1.attentions.1.to_k.weight", "up_blocks.1.attentions.1.to_k.bias", "up_blocks.1.attentions.1.to_v.weight", "up_blocks.1.attentions.1.to_v.bias", "up_blocks.1.attentions.1.to_out.0.weight", "up_blocks.1.attentions.1.to_out.0.bias", "up_blocks.1.attentions.2.group_norm.weight", "up_blocks.1.attentions.2.group_norm.bias", "up_blocks.1.attentions.2.to_q.weight", "up_blocks.1.attentions.2.to_q.bias", "up_blocks.1.attentions.2.to_k.weight", "up_blocks.1.attentions.2.to_k.bias", "up_blocks.1.attentions.2.to_v.weight", "up_blocks.1.attentions.2.to_v.bias", "up_blocks.1.attentions.2.to_out.0.weight", "up_blocks.1.attentions.2.to_out.0.bias".
	size mismatch for conv_in.weight: copying a param with shape torch.Size([128, 3, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 3, 3, 3]).
	size mismatch for conv_in.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for time_embedding.linear_1.weight: copying a param with shape torch.Size([512, 128]) from checkpoint, the shape in current model is torch.Size([896, 224]).
	size mismatch for time_embedding.linear_1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for time_embedding.linear_2.weight: copying a param with shape torch.Size([512, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for time_embedding.linear_2.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.0.resnets.0.norm1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.norm1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for down_blocks.0.resnets.0.conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([128, 512]) from checkpoint, the shape in current model is torch.Size([224, 896]).
	size mismatch for down_blocks.0.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.norm2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.norm2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.0.conv2.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for down_blocks.0.resnets.0.conv2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.norm1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.norm1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.conv1.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for down_blocks.0.resnets.1.conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([128, 512]) from checkpoint, the shape in current model is torch.Size([224, 896]).
	size mismatch for down_blocks.0.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.norm2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.norm2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.resnets.1.conv2.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for down_blocks.0.resnets.1.conv2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.0.downsamplers.0.conv.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for down_blocks.0.downsamplers.0.conv.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.1.attentions.0.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.0.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.0.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.0.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.0.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.0.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.0.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.0.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.0.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.0.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.1.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.1.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.1.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.attentions.1.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for down_blocks.1.attentions.1.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.norm1.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.1.resnets.0.norm1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for down_blocks.1.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 224, 3, 3]).
	size mismatch for down_blocks.1.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([448, 896]).
	size mismatch for down_blocks.1.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for down_blocks.1.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.0.conv_shortcut.weight: copying a param with shape torch.Size([256, 128, 1, 1]) from checkpoint, the shape in current model is torch.Size([448, 224, 1, 1]).
	size mismatch for down_blocks.1.resnets.0.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for down_blocks.1.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([448, 896]).
	size mismatch for down_blocks.1.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for down_blocks.1.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.1.downsamplers.0.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for down_blocks.1.downsamplers.0.conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.2.resnets.0.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.2.resnets.0.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for down_blocks.2.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 448, 3, 3]).
	size mismatch for down_blocks.2.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([672, 896]).
	size mismatch for down_blocks.2.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for down_blocks.2.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for down_blocks.2.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([672, 896]).
	size mismatch for down_blocks.2.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for down_blocks.2.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.2.downsamplers.0.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for down_blocks.2.downsamplers.0.conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.3.resnets.0.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.3.resnets.0.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for down_blocks.3.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 672, 3, 3]).
	size mismatch for down_blocks.3.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for down_blocks.3.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for down_blocks.3.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for down_blocks.3.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for down_blocks.3.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for down_blocks.3.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for down_blocks.3.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1792]).
	size mismatch for up_blocks.0.resnets.0.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1792]).
	size mismatch for up_blocks.0.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 1792, 3, 3]).
	size mismatch for up_blocks.0.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for up_blocks.0.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for up_blocks.0.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.0.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([896, 1792, 1, 1]).
	size mismatch for up_blocks.0.resnets.0.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1792]).
	size mismatch for up_blocks.0.resnets.1.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1792]).
	size mismatch for up_blocks.0.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 1792, 3, 3]).
	size mismatch for up_blocks.0.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for up_blocks.0.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for up_blocks.0.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.1.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([896, 1792, 1, 1]).
	size mismatch for up_blocks.0.resnets.1.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1568]).
	size mismatch for up_blocks.0.resnets.2.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1568]).
	size mismatch for up_blocks.0.resnets.2.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 1568, 3, 3]).
	size mismatch for up_blocks.0.resnets.2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for up_blocks.0.resnets.2.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for up_blocks.0.resnets.2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.resnets.2.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([896, 1568, 1, 1]).
	size mismatch for up_blocks.0.resnets.2.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.0.upsamplers.0.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for up_blocks.0.upsamplers.0.conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.1.resnets.0.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1568]).
	size mismatch for up_blocks.1.resnets.0.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1568]).
	size mismatch for up_blocks.1.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 1568, 3, 3]).
	size mismatch for up_blocks.1.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([672, 896]).
	size mismatch for up_blocks.1.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for up_blocks.1.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.0.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([672, 1568, 1, 1]).
	size mismatch for up_blocks.1.resnets.0.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1344]).
	size mismatch for up_blocks.1.resnets.1.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1344]).
	size mismatch for up_blocks.1.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 1344, 3, 3]).
	size mismatch for up_blocks.1.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([672, 896]).
	size mismatch for up_blocks.1.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for up_blocks.1.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.1.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([672, 1344, 1, 1]).
	size mismatch for up_blocks.1.resnets.1.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1120]).
	size mismatch for up_blocks.1.resnets.2.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1120]).
	size mismatch for up_blocks.1.resnets.2.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 1120, 3, 3]).
	size mismatch for up_blocks.1.resnets.2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([672, 896]).
	size mismatch for up_blocks.1.resnets.2.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for up_blocks.1.resnets.2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.resnets.2.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([672, 1120, 1, 1]).
	size mismatch for up_blocks.1.resnets.2.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.1.upsamplers.0.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([672, 672, 3, 3]).
	size mismatch for up_blocks.1.upsamplers.0.conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.2.attentions.0.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.0.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.0.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.0.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.0.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.0.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.0.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.0.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.0.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.0.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.1.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.1.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.1.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.1.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.1.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.2.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.2.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.2.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.attentions.2.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([448, 448]).
	size mismatch for up_blocks.2.attentions.2.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1120]).
	size mismatch for up_blocks.2.resnets.0.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([1120]).
	size mismatch for up_blocks.2.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 1120, 3, 3]).
	size mismatch for up_blocks.2.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([448, 896]).
	size mismatch for up_blocks.2.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for up_blocks.2.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.0.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([448, 1120, 1, 1]).
	size mismatch for up_blocks.2.resnets.0.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.norm1.weight: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.2.resnets.1.norm1.bias: copying a param with shape torch.Size([512]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for up_blocks.2.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 512, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 896, 3, 3]).
	size mismatch for up_blocks.2.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([448, 896]).
	size mismatch for up_blocks.2.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for up_blocks.2.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.1.conv_shortcut.weight: copying a param with shape torch.Size([256, 512, 1, 1]) from checkpoint, the shape in current model is torch.Size([448, 896, 1, 1]).
	size mismatch for up_blocks.2.resnets.1.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.norm1.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.2.resnets.2.norm1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.2.resnets.2.conv1.weight: copying a param with shape torch.Size([256, 384, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 672, 3, 3]).
	size mismatch for up_blocks.2.resnets.2.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([448, 896]).
	size mismatch for up_blocks.2.resnets.2.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for up_blocks.2.resnets.2.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.resnets.2.conv_shortcut.weight: copying a param with shape torch.Size([256, 384, 1, 1]) from checkpoint, the shape in current model is torch.Size([448, 672, 1, 1]).
	size mismatch for up_blocks.2.resnets.2.conv_shortcut.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.2.upsamplers.0.conv.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([448, 448, 3, 3]).
	size mismatch for up_blocks.2.upsamplers.0.conv.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.3.resnets.0.norm1.weight: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.3.resnets.0.norm1.bias: copying a param with shape torch.Size([384]) from checkpoint, the shape in current model is torch.Size([672]).
	size mismatch for up_blocks.3.resnets.0.conv1.weight: copying a param with shape torch.Size([128, 384, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 672, 3, 3]).
	size mismatch for up_blocks.3.resnets.0.conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([128, 512]) from checkpoint, the shape in current model is torch.Size([224, 896]).
	size mismatch for up_blocks.3.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.0.norm2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.0.norm2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.0.conv2.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for up_blocks.3.resnets.0.conv2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.0.conv_shortcut.weight: copying a param with shape torch.Size([128, 384, 1, 1]) from checkpoint, the shape in current model is torch.Size([224, 672, 1, 1]).
	size mismatch for up_blocks.3.resnets.0.conv_shortcut.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.3.resnets.1.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.3.resnets.1.conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 448, 3, 3]).
	size mismatch for up_blocks.3.resnets.1.conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([128, 512]) from checkpoint, the shape in current model is torch.Size([224, 896]).
	size mismatch for up_blocks.3.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.norm2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.norm2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.conv2.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for up_blocks.3.resnets.1.conv2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.1.conv_shortcut.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([224, 448, 1, 1]).
	size mismatch for up_blocks.3.resnets.1.conv_shortcut.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.3.resnets.2.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([448]).
	size mismatch for up_blocks.3.resnets.2.conv1.weight: copying a param with shape torch.Size([128, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 448, 3, 3]).
	size mismatch for up_blocks.3.resnets.2.conv1.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.time_emb_proj.weight: copying a param with shape torch.Size([128, 512]) from checkpoint, the shape in current model is torch.Size([224, 896]).
	size mismatch for up_blocks.3.resnets.2.time_emb_proj.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.norm2.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.norm2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.conv2.weight: copying a param with shape torch.Size([128, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([224, 224, 3, 3]).
	size mismatch for up_blocks.3.resnets.2.conv2.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for up_blocks.3.resnets.2.conv_shortcut.weight: copying a param with shape torch.Size([128, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([224, 448, 1, 1]).
	size mismatch for up_blocks.3.resnets.2.conv_shortcut.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for mid_block.attentions.0.group_norm.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.attentions.0.group_norm.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.attentions.0.to_q.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.attentions.0.to_q.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.attentions.0.to_k.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.attentions.0.to_k.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.attentions.0.to_v.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.attentions.0.to_v.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.attentions.0.to_out.0.weight: copying a param with shape torch.Size([256, 256]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.attentions.0.to_out.0.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for mid_block.resnets.0.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.resnets.0.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.0.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for mid_block.resnets.0.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.norm1.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.norm1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.conv1.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for mid_block.resnets.1.conv1.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.time_emb_proj.weight: copying a param with shape torch.Size([256, 512]) from checkpoint, the shape in current model is torch.Size([896, 896]).
	size mismatch for mid_block.resnets.1.time_emb_proj.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.norm2.weight: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.norm2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for mid_block.resnets.1.conv2.weight: copying a param with shape torch.Size([256, 256, 3, 3]) from checkpoint, the shape in current model is torch.Size([896, 896, 3, 3]).
	size mismatch for mid_block.resnets.1.conv2.bias: copying a param with shape torch.Size([256]) from checkpoint, the shape in current model is torch.Size([896]).
	size mismatch for conv_norm_out.weight: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for conv_norm_out.bias: copying a param with shape torch.Size([128]) from checkpoint, the shape in current model is torch.Size([224]).
	size mismatch for conv_out.weight: copying a param with shape torch.Size([3, 128, 3, 3]) from checkpoint, the shape in current model is torch.Size([3, 224, 3, 3]).